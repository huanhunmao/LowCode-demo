var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parsePageInServer = exports.parsePage = exports.PARSE_PAGE_PATH = void 0;
const axios_1 = __importDefault(require("axios"));
const foxpage_shared_1 = require("@foxpage/foxpage-shared");
const context_1 = require("./context");
const parser_1 = require("./parser");
// simmer to foxpage-plugin-page-parse
exports.PARSE_PAGE_PATH = '/_foxpage/parse-page';
/**
 * parse page
 * @param page page content
 * @param opt parse opt
 * @returns parsed content
 */
const parsePage = async (page, opt) => {
    // init ctx
    const ctx = (0, context_1.createRenderContext)(opt.appInfo);
    const contentInstances = (0, foxpage_shared_1.createContentInstance)(Object.assign(Object.assign({}, opt.relationInfo), { page: [page] }));
    ctx.updateOrigin(Object.assign(Object.assign({}, contentInstances), { sysVariables: foxpage_shared_1.variable.getSysVariables(contentInstances) }));
    ctx.updateOriginPage(contentInstances.page[0]);
    // parse
    const parsed = await (0, parser_1.parse)(page, ctx);
    return parsed;
};
exports.parsePage = parsePage;
/**
 * parse page in server
 * @param page page content
 * @param opt parse option
 */
const parsePageInServer = async (page, opt) => {
    const url = opt.host ? `${opt.host}${exports.PARSE_PAGE_PATH}` : exports.PARSE_PAGE_PATH;
    const result = await axios_1.default.post(url, {
        page,
        opt: {
            appId: opt.appInfo.appId,
            relationInfo: opt.relationInfo,
            locale: opt.locale,
        },
    });
    return result;
};
exports.parsePageInServer = parsePageInServer;
