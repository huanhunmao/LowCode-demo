var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeObject = void 0;
// @ts-ignore
const is_type_of_1 = __importDefault(require("is-type-of"));
const hasOwnProperty = Object.prototype.hasOwnProperty;
/**
 * merge the any object
 * @param base base data
 * @param current current data
 * @returns merged data
 */
exports.mergeObject = (base, current) => {
    const result = base;
    for (const key in current) {
        if (hasOwnProperty.call(current, key)) {
            if (hasOwnProperty.call(base, key) && is_type_of_1.default.object(base[key]) && is_type_of_1.default.object(current[key])) {
                if (!is_type_of_1.default.array(base[key]) && !is_type_of_1.default.array(current[key])) {
                    result[key] = exports.mergeObject(base[key], current[key]);
                }
                else {
                    result[key] = current[key];
                }
            }
            else {
                result[key] = current[key];
            }
        }
    }
    return result;
};
