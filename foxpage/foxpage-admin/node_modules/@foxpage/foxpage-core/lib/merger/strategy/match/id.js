Object.defineProperty(exports, "__esModule", { value: true });
exports.matchById = void 0;
exports.matchById = (record, list, mergeNode) => {
    list.forEach(item => {
        var _a;
        const baseNode = record[item.id];
        if (baseNode) {
            const merged = mergeNode(baseNode, item);
            record[item.id] = Object.assign(Object.assign({}, merged), { childIds: baseNode.childIds });
        }
        else {
            // collect the new nodes
            record[item.id] = item;
            const parentId = ((_a = item.extension) === null || _a === void 0 ? void 0 : _a.parentId) || '';
            const parent = record[parentId];
            if (parent) {
                if (!parent.childIds) {
                    parent.childIds = [];
                }
                parent.childIds.push(item.id);
            }
        }
    });
};
