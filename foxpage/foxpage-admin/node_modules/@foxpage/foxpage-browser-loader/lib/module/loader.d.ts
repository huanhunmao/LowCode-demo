import { ModuleConfig } from '@foxpage/foxpage-types';
import { IModuleLoader, ModuleStatus } from './interface';
export interface ModuleLoaderFn {
    (mod: Omit<IModuleLoader, 'url'> & {
        url: string;
    }): Promise<any>;
}
export declare class ModuleLoader<T = any> implements IModuleLoader<T> {
    id: string;
    name: string;
    type: NonNullable<ModuleConfig['type']>;
    version: string | undefined;
    config: ModuleConfig;
    deps: string[];
    softDeps: string[];
    exports: T | undefined | null;
    meta?: Record<string, any>;
    status: ModuleStatus;
    customLoader?: () => Promise<T>;
    loader: ModuleLoaderFn;
    url?: string | undefined;
    error?: Error;
    private _loadPromise?;
    constructor(name: string, config?: ModuleConfig<any, Record<string, any>>, id?: string);
    update(config: ModuleConfig<T>): void;
    get loaded(): boolean;
    get enable(): boolean;
    load(): Promise<T | null | undefined>;
    private _load;
}
