Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentDetailInstance = void 0;
const types_1 = require("./types");
/**
 * abstract file content impl
 *
 * @export
 * @class FileContentImpl
 * @implements {ContentDetail<K>}
 * @template T
 */
class ContentDetailInstance {
    constructor(data) {
        this.relationMap = new Map();
        this.id = data.id;
        this.schemas = data.schemas;
        this.relation = data.relation;
        this.extension = data.extension;
        this.version = data.version;
        this.versionNumber = data.versionNumber;
        this.name = data.name;
        this.fileId = data.fileId;
        this.initRelationMap(this.relation, this.relationMap);
    }
    get templates() {
        return this.relationMap.get(types_1.ContentType.TEMPLATE);
    }
    get variables() {
        return this.relationMap.get(types_1.ContentType.VARIABLE);
    }
    get sysVariables() {
        return this.relationMap.get(types_1.ContentType.SYS_VARIABLE);
    }
    get conditions() {
        return this.relationMap.get(types_1.ContentType.CONDITION);
    }
    get functions() {
        return this.relationMap.get(types_1.ContentType.FUNCTION);
    }
    get mocks() {
        return this.relationMap.get(types_1.ContentType.MOCK);
    }
    initRelationMap(relation = {}, relationMap) {
        Object.keys(relation).forEach(key => {
            const { id, type } = relation[key];
            // sysVariables,variables,conditions,functions,...
            const keyStr = type === 'sys_variable' ? 'sysVariables' : `${type}s`;
            const value = relationMap.get(keyStr) || [];
            if (keyStr === types_1.ContentType.SYS_VARIABLE) {
                const sysVariableKey = key.split(':')[1];
                if (sysVariableKey && value.indexOf(sysVariableKey) === -1) {
                    value.push(sysVariableKey);
                }
            }
            else {
                if (value.indexOf(id) === -1) {
                    value.push(id);
                }
            }
            relationMap.set(keyStr, value);
        });
    }
}
exports.ContentDetailInstance = ContentDetailInstance;
