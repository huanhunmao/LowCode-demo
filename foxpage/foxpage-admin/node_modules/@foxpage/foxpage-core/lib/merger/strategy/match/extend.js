Object.defineProperty(exports, "__esModule", { value: true });
exports.matchByExtend = void 0;
exports.matchByExtend = (record, list, mergeNode) => {
    list.forEach(item => {
        var _a;
        const { extendId } = item.extension || {};
        if (extendId) {
            const baseNode = record[extendId];
            // no parent will hide the node
            if (baseNode) {
                const merged = mergeNode(baseNode, item);
                if (merged) {
                    record[extendId] = Object.assign(Object.assign({}, merged), { childIds: baseNode.childIds });
                }
            }
        }
        else {
            // collect the new nodes
            record[item.id] = item;
            const parentId = ((_a = item.extension) === null || _a === void 0 ? void 0 : _a.parentId) || '';
            const parent = record[parentId];
            if (parent) {
                if (!parent.childIds) {
                    parent.childIds = [];
                }
                parent.childIds.push(item.id);
            }
        }
    });
};
