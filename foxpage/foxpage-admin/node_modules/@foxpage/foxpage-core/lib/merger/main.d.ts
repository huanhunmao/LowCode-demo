import { Page } from '@foxpage/foxpage-types';
import { MergeStructureNode } from './interface';
import { MergeStrategy } from './strategy';
/**
 * tree to record
 * for get extend parent node easy
 * @param tree tree data
 * @returns
 */
export declare const preMerge: <T extends MergeStructureNode>(trees: T[]) => Record<string, T>;
/**
 * record to tree
 * @param records structure node records
 * @returns new tree
 */
export declare const postMerge: <T extends MergeStructureNode>(record: Record<string, T>) => T[];
/**
 * handle merge
 *
 * preMerge:transform the default schemas to record for get easy
 * doMerge: merge every node
 * postMerge:collect the merged node & transform to the tree(page structure)
 *
 * @param base base page content
 * @param current current page content
 * @param options merge options
 * @returns merge page content
 */
export declare const merge: (base: Page, current: Page, options?: {
    strategy: MergeStrategy;
}) => Page;
