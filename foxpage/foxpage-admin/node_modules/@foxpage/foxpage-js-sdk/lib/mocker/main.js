var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withMock = void 0;
const foxpage_core_1 = require("@foxpage/foxpage-core");
const foxpage_shared_1 = require("@foxpage/foxpage-shared");
const context_1 = require("../context");
/**
 * whit mock
 * @param page page content
 * @param mocks mocks
 * @param opt mock options
 */
const withMock = (page, mocks, opt) => {
    // init ctx
    const ctx = (0, context_1.createRenderContext)(opt.appInfo);
    const _a = opt.relationInfo, { extendPage } = _a, rest = __rest(_a, ["extendPage"]);
    const contentInstances = (0, foxpage_shared_1.createContentInstance)(Object.assign(Object.assign({}, rest), { page: [page] }));
    ctx.updateOrigin(Object.assign(Object.assign({}, contentInstances), { sysVariables: foxpage_shared_1.variable.getSysVariables(contentInstances) }));
    const pageInstance = contentInstances.page[0];
    ctx.updateOriginPage(pageInstance);
    ctx.updateOriginByKey('extendPage', extendPage);
    const result = foxpage_core_1.mocker.withMock(mocks, ctx);
    return result;
};
exports.withMock = withMock;
