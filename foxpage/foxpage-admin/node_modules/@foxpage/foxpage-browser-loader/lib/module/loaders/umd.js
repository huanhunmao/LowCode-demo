Object.defineProperty(exports, "__esModule", { value: true });
exports.destroyUmd = exports.loadUmdModule = void 0;
const config_1 = require("../config");
const requirejs_1 = require("./requirejs");
let _preparePromise;
function prepare() {
    if (!_preparePromise) {
        const link = (0, config_1.getConfig)('requirejsLink');
        _preparePromise = (0, requirejs_1.loadRequirejs)(link);
    }
    return _preparePromise;
}
const loadUmdModule = mod => {
    const { umdModuleName: amdModuleName = mod.id, define, alias = [] } = mod.config;
    const win = (0, config_1.getWindow)();
    return prepare()
        .then(() => (define ? define() : (0, requirejs_1.loadAmdModule)(amdModuleName, { alias, url: mod.url, version: mod.version })))
        .then(exportData => {
        // redefine module for requirejs
        if (typeof win.define === 'function') {
            win.define(amdModuleName, () => exportData);
            alias.forEach(name => {
                win.define(name, () => exportData);
            });
        }
        return exportData;
    });
};
exports.loadUmdModule = loadUmdModule;
function destroyUmd() {
    _preparePromise = undefined;
}
exports.destroyUmd = destroyUmd;
