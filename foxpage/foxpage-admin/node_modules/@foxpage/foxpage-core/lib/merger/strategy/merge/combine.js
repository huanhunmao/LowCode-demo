Object.defineProperty(exports, "__esModule", { value: true });
exports.combineNode = void 0;
const utils_1 = require("../../utils");
const BLANK_NODE = 'system.inherit-blank-node'; // blank node
/**
 * merge structure node
 * @param base base node
 * @param current current node
 * @returns merged node
 */
exports.combineNode = (base, current) => {
    const { props: baseProps, directive: baseDirective = {}, extension: baseExtension = {}, version, name, label } = base;
    const { props: currentProps, directive: currentDirective = {}, extension: currentExtension = {} } = current;
    const newNode = Object.assign({}, current);
    if (!current.version) {
        newNode.version = version;
    }
    if (!current.label || current.label === BLANK_NODE) {
        newNode.label = label;
    }
    if (!current.name) {
        newNode.name = name;
    }
    // merge props
    newNode.props = utils_1.mergeObject(baseProps, currentProps);
    // merge directive
    newNode.directive = utils_1.mergeObject(baseDirective, currentDirective);
    // merge extension
    newNode.extension = utils_1.mergeObject(baseExtension, currentExtension);
    return newNode;
};
