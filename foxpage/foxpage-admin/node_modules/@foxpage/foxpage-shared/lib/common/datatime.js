var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateString = exports.DateTime = void 0;
const lodash_1 = require("lodash");
const moment_1 = __importDefault(require("moment"));
class DateTime {
    constructor(dateOrInput) {
        this.moment = moment_1.default(dateOrInput);
    }
    static now() {
        return new DateTime();
    }
    static fromString(input) {
        return new DateTime(new Date(input));
    }
    get ISOString() {
        return new DateString(this.moment.toISOString(), this);
    }
    get timestamp() {
        return this.moment.valueOf();
    }
    get year() {
        return this.moment.year();
    }
    // TODO:
    // 0 ~ 11
    get month() {
        return this.moment.month();
    }
    // 本月第几日: 1 ~ 31
    get day() {
        return this.moment.date();
    }
    // TODO:
    // week of month: 1 ~ 5
    get week() {
        return this.moment.week();
    }
    // day of week, from Sunday: 0 ~ 6
    get weekDay() {
        return this.moment.day();
    }
    get hour() {
        return this.moment.hour();
    }
    // 0 ~ 59
    get minute() {
        return this.moment.minute();
    }
    // 0 ~ 59
    get second() {
        return this.moment.seconds();
    }
    // -12 ~ 12
    get zone() {
        return this.moment.utcOffset() / 60;
    }
    toJSON() {
        const keys = [
            'ISOString',
            'timestamp',
            'year',
            'month',
            'day',
            'week',
            'weekDay',
            'hour',
            'minute',
            'second',
            'zone',
        ];
        return lodash_1.pick(this, keys);
    }
    toString() {
        return this.moment.toString();
    }
    valueOf() {
        return this.timestamp;
    }
}
exports.DateTime = DateTime;
class DateString {
    constructor(ISOString, dateTime) {
        this.ISOString = ISOString;
        this.dateTime = dateTime || new DateTime(ISOString);
    }
    toString() {
        return this.ISOString;
    }
    valueOf() {
        return this.dateTime.valueOf();
    }
    toJSON() {
        return this.ISOString;
    }
}
exports.DateString = DateString;
