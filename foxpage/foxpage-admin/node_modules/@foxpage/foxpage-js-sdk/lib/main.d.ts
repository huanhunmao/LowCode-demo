import { Context, Page, RelationInfo, RenderAppInfo } from '@foxpage/foxpage-types';
export declare type PageParseOption = {
    appInfo: RenderAppInfo;
    relationInfo: RelationInfo;
    locale?: string;
};
export declare type PageParseInServerOption = PageParseOption & {
    host?: string;
};
export declare const PARSE_PAGE_PATH = "/_foxpage/parse-page";
/**
 * parse page
 * @param page page content
 * @param opt parse opt
 * @returns parsed content
 */
export declare const parsePage: (page: Page, opt: PageParseOption) => Promise<{
    messages: import("@foxpage/foxpage-shared").Messages | undefined;
    page: {
        id: string;
        schemas: import("@foxpage/foxpage-types").StructureNode<any>[] | undefined;
    };
    ctx: Context;
} | {
    messages: never[];
    page: {
        id?: undefined;
        schemas?: undefined;
    };
    ctx: Context;
}>;
/**
 * parse page in server
 * @param page page content
 * @param opt parse option
 */
export declare const parsePageInServer: (page: Page, opt: PageParseInServerOption) => Promise<import("axios").AxiosResponse<any, any>>;
