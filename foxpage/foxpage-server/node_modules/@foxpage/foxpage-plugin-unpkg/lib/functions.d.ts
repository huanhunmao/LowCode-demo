import { IndexContentPkg } from '@foxpage/foxpage-server-types';
export interface NpmRes {
    name: string;
    scope: string;
    version: string;
}
export interface UnpkgManifest {
    name: string;
    version: string;
    manifest: Record<string, string>;
}
export interface UnpkgFoxpage {
    name: string;
    version: string;
    foxpage: {
        name: string;
        version: string;
        schema: Record<string, any>;
        meta: Record<string, any>;
    };
}
/**
 * Search from npm by the special text, only response 20 packages
 * @param  {{name?:string}} options
 * @returns Promise
 */
export declare const searchNpmPackage: (options: {
    packageName?: string;
    groupConfig?: Record<string, string>;
    proxy?: string;
}) => Promise<NpmRes[]>;
/**
 * Get package manifest file path from unpkg
 * @param  {{name:string;version:string;}} options
 * @returns Promise
 */
export declare const getPackageManifest: (options: {
    name: string;
    version: string;
}) => Promise<UnpkgManifest>;
/**
 * Get package foxpage json file data
 * @param  {{name:string;version:string}} options
 */
export declare const getPackageFoxpage: (options: {
    name: string;
    version: string;
}) => Promise<UnpkgFoxpage>;
/**
 * format response resource structure to {name,version,dirName,files}
 * @param  {UnpkgManifest[]} manifestList
 * @returns IndexContentPkg
 */
export declare const formatResponse: (manifestList: UnpkgManifest[], pkgFoxpageData: UnpkgFoxpage[]) => IndexContentPkg[];
