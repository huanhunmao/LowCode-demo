var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerSysVariables = exports.getSystemVariableValue = exports.registerSystemVariable = void 0;
const defaults = __importStar(require("./sys"));
const systemVariableProviderMap = new Map();
/**
 * register sys variable
 * @param name sys variable name
 * @param getter sys variable parser
 */
exports.registerSystemVariable = (name, getter) => {
    systemVariableProviderMap.set(name, {
        name,
        get: getter,
    });
};
/**
 * get sys variable by variable name
 * @param name sys variable name
 * @param context variable context
 * @returns sys variable
 */
exports.getSystemVariableValue = (name, context) => {
    const getter = systemVariableProviderMap.get(name);
    if (getter) {
        return getter.get(context);
    }
    throw new Error(`system variable "${name}" not supported, should be one of ${[...systemVariableProviderMap.keys()]}`);
};
/**
 * register system variable
 */
const registerSysVariable = () => {
    for (const sysVariable of Object.values(defaults)) {
        exports.registerSystemVariable(sysVariable.name, sysVariable.get);
    }
};
registerSysVariable();
exports.registerSysVariables = registerSysVariable;
